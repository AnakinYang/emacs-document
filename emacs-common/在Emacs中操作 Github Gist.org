#+TITLE: 在Emacs中操作 Github Gist
#+URL: http://www.admintome.com/blog/using-github-gist-emacs/
#+AUTHOR: lujun9972
#+TAGS: emacs-common
#+DATE: [2019-03-15 五 22:10]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil

本文, 我将会想你展示如何在EMACS中操作Github Gist.
这有助于你直接在Emacs上保存代码片段.

* 安装 EMACS 上的 Github Gist 包

第一步就是为EMACS安装gist.el. 首先我们列出所有的包.

#+BEGIN_EXAMPLE
    M-x package-list-packages RET
#+END_EXAMPLE

在列表中找到 gist.el 包，即 ‘gist' 那一行.

[[https://i0.wp.com/www.admintome.com/wp-content/uploads/2018/02/emacs-gist-install-1.png]]

在该行输入 *i* 和 *x* 来安装该包. 安装好包后, 回到EMACS主界面. 

首先通过运行下面命令列出我们已有的 gists:

#+BEGIN_EXAMPLE
    M-x gist-list RET
#+END_EXAMPLE

第一次运行该命令会让你输入 github 用户名和密码. 输入这些信息后，就会向你展示当前Gist的列表 (如果你有的话). 下面显示的是我已有的Gist:

[[https://i0.wp.com/www.admintome.com/wp-content/uploads/2018/02/gist-list.png]]

这跟我在网页上看的完全一致:

[[https://i2.wp.com/www.admintome.com/wp-content/uploads/2018/02/my-gists.png]]

若你按下 *回车* 则 EMACS 会在一个新窗口中打开该gist. 在这个新窗口中你可以像往常一样编辑代码片段. 还可以像往常一样通过 *C-x s* 保存它.

* 创建新gist

我们可以编辑已有的Gist, 现在让我们来在EMACS中创建新的Gist. 退出并运行下面命令来创建一个名叫 *unary-if.py* 的新文件

#+begin_src shell
  $ emacs unary-if.py
#+end_src

添加下面代码到文件中然后保存之.

#+begin_src python
  ## Simple gist to show how to do a python unary if statement
  flag = "True"
  result = True if flag == "True" else False
  print(result)
#+end_src

把所有代码标记为区域，方法是在文本开头的地方按下 *C-Space* (译者注，这只在英文环境下有效,中文环境下用 *Ctrl-@* 来代替)然后移动光标直到高亮所有代码. 
运行下面命令来保存该Gist:

#+BEGIN_EXAMPLE
  M-x gist-region RET
#+END_EXAMPLE

或者用下面命令创建一个私有Gist:

#+BEGIN_EXAMPLE
  M-x gist-region-private RET
#+END_EXAMPLE

现在你可以在网页上看到新Gist了:

[[https://i0.wp.com/www.admintome.com/wp-content/uploads/2018/02/new-gist.png]]

该功能真酷，应该对你会有所帮助. 一如既往的, 我希望你会喜欢这篇在EMACS上操作Github Gist的文章. 
如果你还没有注册我的newsletter，请在下面留言.

