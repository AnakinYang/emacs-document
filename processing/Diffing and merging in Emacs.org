#+TITLE: Diffing and merging in Emacs
#+URL: http://www.skybert.net/emacs/diffing-and-merging-in-emacs/
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2018年 04月 19日 星期四 11:36:20 CST]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
* Diffing files you've got open in your Emacs
*在Emacs中打开不同的文件
:PROPERTIES:
属性:
:CUSTOM_ID: diffing-files-youve-got-open-in-your-emacs
:CUSTOM_ID diffing-files-youve-got-open-in-your-emacs
:END:
结束:

#+BEGIN_EXAMPLE
M-x ediff-buffers
#+END_EXAMPLE

* Diffing revisions of a file
*文件的不同修订
:PROPERTIES:
属性:
:CUSTOM_ID: diffing-revisions-of-a-file
:CUSTOM_ID diffing-revisions-of-a-file
:END:
结束:

C-x v = (=vc-diff=)
C-x v = (=vc-diff=)

You can also view the changes with =ediff= using M-x
您还可以使用=ediff=使用M-x查看更改
=ediff-revision=
= ediff-revision =

* Inside an ediff session
*在ediff会话中
:PROPERTIES:
属性:
:CUSTOM_ID: inside-an-ediff-session
:CUSTOM_ID inside-an-ediff-session
:END:
结束:

Once inside an ediff session, put focus in the =ediff= navigator and
进入ediff会话后，将焦点放在=ediff= navigator和
use e.g.:
使用如:

- n/p - next/previous hunk
- n/p -下一个/前一个
- a - apply version A's hunk
- a -应用版本a的大块头
- b - apply version B's hunk
- b -应用版本b的大块
- r - revert, undo the applying of the A/B hunk.
- r -还原，撤销A/B块的应用。
- q - quit ediff session
q编辑会话

* Resolving merge conflicts in files with merge conflict markers
*使用合并冲突标记解决文件中的合并冲突
:PROPERTIES:
属性:
:CUSTOM_ID: resolving-merge-conflicts-in-files-with-merge-conflict-markers
:CUSTOM_ID resolving-merge-conflicts-in-files-with-merge-conflict-markers
:END:
结束:

Out of the box Emacs gives us an easy interface to working with merge
开箱即用的Emacs为我们提供了一个使用merge的简单接口
conflicts, called =smerge= (as in "simple merge").
冲突，称为=smerge=(在“简单合并”中)。

When there's a merge conflict, the version control system writes the
当存在合并冲突时，版本控制系统将写入
diff markers into the source files themselves and Emacs will highlight
源文件本身的diff标记和Emacs将突出显示
these automatically. It will recognise which parts are "theirs" and
这些自动。它将识别哪些部分是“他们的”
which are "mine" --- as well as "ancestor" if you've set up 3 way merge.
哪些是“我的”——如果你已经设置了3路合并，那么它们就是“祖先”。

[[http://www.skybert.net/graphics/2017/2017-01-04-emacs-3-way-diff-git-merge.png]]
[[http://www.skybert.net/graphics/2017/2017-01-04-emacs-3-way-diff-git-merge.png]]

To select the version at the bottom, I just put my pointer on it, and
要选择底部的版本，我只要把我的指针放在它上面，然后
run M-x =smerge-keep-current=.
运行m x = smerge-keep-current =。

* Telling Git to give us 3 way diff instead of two way
*告诉Git给我们3条路，而不是2条路
:PROPERTIES:
属性:
:CUSTOM_ID: telling-git-to-give-us-3-way-diff-instead-of-two-way
:CUSTOM_ID telling-git-to-give-us-3-way-diff-instead-of-two-way
:END:
结束:

By default git sets up 2 way diffs when there's a merge conflict ("my"
默认情况下，当存在合并冲突时，git会设置两种不同的方式(“my”
version of the file and "their" version). However, when resolving
文件的版本和“他们的”版本)。然而,当解决
merge conflicts, it's often useful to in addition see the most recent
合并冲突，它通常是有用的除了看到最近的
common ancestor of the two versions of the file you're merging.
要合并的文件的两个版本的公共祖先。

This is so useful, you may just want to set it globally for all your
这是非常有用的，你可能只想把它设置为全局的
projects by adding the following to your =~/.gitconfig=:
在你的=~/.gitconfig=中添加以下内容:

#+BEGIN_EXAMPLE
[merge]
conflictstyle = diff3
#+END_EXAMPLE

* *)
:PROPERTIES:
属性:
:CUSTOM_ID: section
:CUSTOM_ID:部分
:END:
结束:

Tested on version Emacs version 25.1
在版本Emacs版本25.1上测试

* P4 specific setup
* P4特定设置
:PROPERTIES:
属性:
:CUSTOM_ID: p4-specific-setup
:CUSTOM_ID p4-specific-setup
:END:
结束:

in =.p4enviro=:
= .p4enviro =:

#+BEGIN_EXAMPLE
P4MERGE=/home/torstein/bin/p4-emacs-merge
#+END_EXAMPLE

in =.emacs=:
在= .emacs =:

#+BEGIN_EXAMPLE
(server-start)
#+END_EXAMPLE

in =/home/torstein/bin/emerge= (Gentoo users, note the full path ;-)
在=/home/torstein/bin/emerge= (Gentoo用户，注意完整的路径;-)

#+BEGIN_EXAMPLE
ancestor=$1
theirs=$2
yours=$3
merge_result=$4

emacsclient -e "(ediff-merge-files-with-ancestor "${yours}" "${theirs}" "${ancestor}" () "${merge_result}")"
emacsclient "${merge_result}"
#+END_EXAMPLE

The full source of p4-emacs-merge can be found here:
p4-emacs-merge的完整源代码可以在这里找到:
https://github.com/skybert/my-little-friends/blob/master/bash/vcs/p4-emacs-merge
https://github.com/skybert/my-little-friends/blob/master/bash/vcs/p4-emacs-merge

** P4 specifc post-merge notes
** P4合并后的特别提示
:PROPERTIES:
属性:
:CUSTOM_ID: p4-specifc-post-merge-notes
:CUSTOM_ID p4-specifc-post-merge-notes
:END:
结束:

After you're finished with the =ediff= session and you're back at the
在您完成了=ediff=会话并返回到
=p4=/shell prompt, choose =ae= (accept edit) Here's one merge
=p4=/shell提示，选择=ae=(接受编辑)这里有一个合并
conflict, with the two version presented (p4 "yours" is A and p4
冲突，与两个版本提出(p4“你的”是一个和p4
"theirs" is B):
“他们”是B):

[[http://www.skybert.net/graphics/2016/2016-03-10-ediff-merge-before.png]]
[[http://www.skybert.net/graphics/2016/2016-03-10-ediff-merge-before.png]]

Now, I want "their" version, so I hit b. Emacs then replaces the
现在，我想要“他们的”版本，所以我点击b
merge conflict markers/block with the contents of the B hunk:
合并冲突标记/块与B块的内容:

[[http://www.skybert.net/graphics/2016/2016-03-10-ediff-merge-after.png]]
[[http://www.skybert.net/graphics/2016/2016-03-10-ediff-merge-after.png]]
