#+TITLE: Part 2: minimal ASCII art
#+URL: http://dantorop.info/project/emacs-animation/lisp2.html
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2020年 02月 10日 星期一 10:09:08 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil

Continued from [[/project/emacs-animation/lisp1.html][Emacs Lisp programming pt. 1]].

*** Using =random=
    :PROPERTIES:
    :CUSTOM_ID: using-random
    :END:

#+BEGIN_EXAMPLE
  ELISP> (dotimes (i (random 10))
       (dotimes (j (random (+ i 5)))
         (insert "&"))
       (insert "^"))
  nil
  ELISP> &&^&&&&^&&&&^&&&&^&&&&&&&&^&&&&&&&^
#+END_EXAMPLE

*** Using =if= to sometimes insert newlines
    :PROPERTIES:
    :CUSTOM_ID: using-if-to-sometimes-insert-newlines
    :END:

#+BEGIN_EXAMPLE
  ELISP> (dotimes (i (random 30))
       (if (= (random 5) 0)
           (newline))
       (dotimes (j (random 10))
         (insert "?"))
       (insert " <  "))
  nil
  ELISP> ?? <  
  ?? <  ?? <   <  ?? <  ????? <  
  ???????? <  ?????? <  
   <  ??????? <  
  ????????? <  ???????? <  ??????? <  
   <  ???????? <  ?? <  ???????? <  ???? <  ????????? <  ???????? <  ??? <  ????????? <  ?? <  ????? <  ??? <  
  ??? <  ????????? <  
#+END_EXAMPLE

*** Using =sit-for= to control time
    :PROPERTIES:
    :CUSTOM_ID: using-sit-for-to-control-time
    :END:

#+BEGIN_EXAMPLE
  ELISP> (dotimes (i 10)
       (dotimes (j (random 20))
         (insert ",,"))
       (insert "#")
       (sit-for (* 0.1 (random 4))))
  nil
  ELISP> ,,,,,,,,,,#,,,,##,,,,,,,,#,,,,,,,,,,,,#,,,,,,,,,,#,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,#,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,#,,,,,,,,,,,,,,,,,,,,,,,,,,,,#,,,,,,,,,,,,,,#
#+END_EXAMPLE

*** Moving cursor while inserting
    :PROPERTIES:
    :CUSTOM_ID: moving-cursor-while-inserting
    :END:

#+BEGIN_EXAMPLE
  ELISP> (dotimes (i 20)
       (dotimes (j (random 5))
         (insert ",,"))
       (goto-char (- (point) (random 4)))
       (insert "#")
       (if (= (random 3) 0)
           (newline))
       (sit-for (* 0.1 (random 3))))#
  ,,,,,,,,#
  ,,,,,#
  ,,,,,,#,,##,,,#,,#
  ,,,,#,,,#,,,,,,#,,,#,#
  ,,,#,,,#,,,,,,,,,,,#
  #,,#,,,#,,,,,,,,#,,,,,
  nil
  ELISP> 
#+END_EXAMPLE

*** A slightly easier way to do the same
    :PROPERTIES:
    :CUSTOM_ID: a-slightly-easier-way-to-do-the-same
    :END:

#+BEGIN_EXAMPLE
  ELISP> (dotimes (i 20)
       (dotimes (j (random 5))
         (insert ",,"))
       (backward-char (random 4))
       (insert "#")
       (if (= (random 3) 0)
           (newline))
       (sit-for (* 0.1 (random 3))))
  nil
  ELISP> ,,##,,,#
  #,,,,,,,,##
  ,,#,,,,,,#,#,,,,,##,#,#,,,#,,,,,,#
  #
  ,,#,,,,,,,,,
  ,,,#,#,,,,,,,,,,,
  ,#,
#+END_EXAMPLE

Continued in [[/project/emacs-animation/lisp3.html][Emacs Lisp programming pt. 3]].

- [[/][Projects: Lots]]
- [[/projects/photographic.html][photographic]]
- [[/projects/digital.html][digital]]
- [[/projects/writing_and_collaboration.html][writing & collaboration]]
- [[/about.html][About & contact]]

[[/][Home]] › [[/projects/digital.html][Digital]] › [[/project/emacs-animation/][Emacs Lisp Animations]] › Part 2: minimal ASCII art

© 2019 by Dan Torop
