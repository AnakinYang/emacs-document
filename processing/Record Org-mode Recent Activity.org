#+TITLE: Record Org-mode Recent Activity
#+URL: http://yqrashawn.com/2018/09/17/record-org-mode-recent-activity/
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2018年 09月 28日 星期五 10:34:56 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
So I checked the [[https://www.notion.so/][notion]] tool recently. It's pretty good if everyone around use it. But as an emacs user, I still prefer org-mode.
所以我最近查看了[[https://www.notion.so/][concept]]工具。如果每个人都使用它，那就很好了。但是作为emacs用户，我仍然更喜欢组织模式。

It's just there's one functionality I never thought about when I was using org-mode, the ability to record your activity. Like when you reschedule somthing or change the state of tasks.
这只是我在使用组织模式时从未想过的一个功能，记录你的活动的能力。比如你重新安排了某件事或者改变了任务的状态。

I did some search online and came up with a solution. I'm pretty sure there's better ways to do so. I'll just put the codes here. It leverages the =org-agenda-custom-commands= and the =:LOGBOOK:= feature. And the code is mainly from [[https://stackoverflow.com/questions/8039416/custom-searches-using-timestamps-in-logbook-in-org-mode][here]] with some modification.
我在网上搜索了一下，找到了一个解决方案。我很确定有更好的方法。我把代码写在这里。它利用了=org-agenda-custom-commands=和=:LOGBOOK:=特性。代码主要来自[[https://stackoverflow.com/questions/8039416/customsearches-using-timestamps-inlogbookinorg- mode][这里]]，有一些修改。

#+BEGIN_EXAMPLE
;; enable the log feature
(setq org-log-into-drawer t)
(setq org-log-reschedule 'time)
(setq org-log-redeadline 'note)
(setq org-log-note-clock-out t)

;; add T: before timestamp for easy regex search
(setq org-log-note-headings '((done . "CLOSING NOTE T:%t")
(state . "State %-12s from %-12S T:%t")
(note . "Note taken on T:%t")
(reschedule . "Rescheduled from %S on T:%t")
(delschedule . "Not scheduled, was %S on T:%t")
(redeadline . "New deadline from %S on T:%t")
(deldeadline . "Removed deadline, was %S on T:%t")
(refile . "Refiled on T:%t")
(clock-out . "Clocked out on T:%t")))

(defun +org/find-state (&optional end)
"Used to search through the logbook of subtrees.

Looking for T:[2018-09-14 Fri 10:50] kind of time stamp in logbook."
(let* ((closed (re-search-forward "^CLOSED: \[" end t))
(created (if (not closed) (re-search-forward "^:CREATED: \[" end t)))
(logbook (if (not closed) (re-search-forward ".*T:\[" end t)))
(result (or closed logbook created)))
result))

(defun +org/date-diff (start end &optional compare)
"Calculate difference between selected timestamp to current date.

The difference between the dates is calculated in days.
START and END define the region within which the timestamp is found.
Optional argument COMPARE allows for comparison to a specific date rather than to current date."
(let* ((start-date (if compare compare (calendar-current-date))))
(- (calendar-absolute-from-gregorian start-date) (org-time-string-to-absolute (buffer-substring-no-properties start end)))))

(defun +org/last-update-before (since)
"List Agenda items that updated before SINCE day."
(let ((next-headline (save-excursion (or (outline-next-heading) (point-max)))))
(let* ((subtree-end (save-excursion (org-end-of-subtree t)))
(subtree-valid (save-excursion
(forward-line 1)
(if (and (< (point) subtree-end)
;; Find the timestamp to test
(+org/find-state subtree-end))
(let ((startpoint (point)))
(forward-word 3)
;; Convert timestamp into days difference from today
(+org/date-diff startpoint (point)))
(point-max)))))
(if (and subtree-valid (>= subtree-valid since))
next-headline
nil))))

(defun +org/has-child-and-last-update-before (day)
(if (+org/has-child-p) (point)
(+org/last-update-before day)))

#+END_EXAMPLE

So now we can use the =+org/last-update-before= or =+org/has-child-and-last-update-before= function in =org-agenda-custom-commands= to filter activities updated since =SINCE= days ago. Like this.
因此，现在我们可以使用=+ /last-update-before=或=+ / have -child-and-last-update-before= function in =org-agenda-custom-commands=来过滤自= since = days ago以来更新的活动。像这样。

#+BEGIN_EXAMPLE
(setq org-agenda-custom-commands
'(("R" "Recent activity"
((tags "*"
((org-agenda-overriding-header "Recent Activity")
(org-agenda-skip-function '(+org/has-child-and-last-update-before 7)))))
nil nil)))

#+END_EXAMPLE

The code will only search for timestamps in ":LOGBOOK:" prefexd with =T:= or =:CREATED:= or =:CLOSED= timestamps. It works fine and helps me sometimes. Maybe I should write a agenda sort function to let them ordered by changed time. Fine for me right now.
该代码将只搜索“:LOGBOOK:”prefexd中的时间戳，其中包含=T:=或=:CREATED:=或=:CLOSED=时间戳。它工作得很好，有时帮助我。也许我应该写一个议程排序功能，让他们按改变的时间排序。我现在很好。

UPDATE: 2018-09-24 If anyone intrested in automatically recoding changes of headings, you may want check [[https://emacs.stackexchange.com/questions/39348/org-auto-add-update-date-of-last-modification-of-heading-and-or-its-body-to#][this]] stackoverflow question. The answer gives a method using hash to record last modification time of any changes in headings or even bodys.
更新:2018-09-24如果有人对自动记录标题的变化感兴趣，你可能想要检查[[https://emacs.stackexchange.com/questions/39348/org-auto-add- UPDATE -date-of-last-modification-of-head -and- its-body-to#][这个]]stackoverflow问题。答案给出了一种方法，使用散列来记录标题甚至是主体的任何更改的最后修改时间。
