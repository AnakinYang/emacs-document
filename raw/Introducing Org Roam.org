#+TITLE: Introducing Org Roam
#+URL: https://blog.jethro.dev/posts/introducing_org_roam/
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2020年 02月 14日 星期五 12:32:17 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
Introducing Org Roam

In a previous post, I described my [[/posts/zettelkasten_with_org/][note-taking workflow with zettelkasten and org]]. I extracted some of that logic out into a Github repository, and it sort of took a life of its own. Now that it's gaining a bit of popularity and usage, I thought I'd do a more formal introduction to the package, and how I use it. It is not published on MELPA, and likely won't be for a while, but you can find it on Github [[https://github.com/jethrokuan/org-roam][here]]. The features I really need are in, so once bug reports stop coming, I'll cut a release, and start taking its development more formally.

** What is Org-roam?
   :PROPERTIES:
   :CUSTOM_ID: what-is-org-roam
   :END:

Org-roam is an attempt at replicating Roam in Emacs, built upon the all-powerful Org-mode format. Like Roam, it is a note-taking tool for networked thought. The tool encourages a non-hierarchical note-taking workflow. With Org-roam, note-taking becomes effortless and fun: write notes wherever you want, and link them up however you want. For more information about why a tool like this would be useful, you can read the following articles:

** Why Org-roam?
   :PROPERTIES:
   :CUSTOM_ID: why-org-roam
   :END:

Org-roam may seem like a result of NIH syndrome, and perhaps there's some partial truth to that. After all, it started out as [[https://www.reddit.com/r/emacs/comments/ebrw2l/has%5Fanybody%5Fhere%5Ftried%5Fthe%5Froam%5Fresearch/fd8cp4c?utm%5Fsource=share&utm%5Fmedium=web2x][27 lines of code on top of deft]]. However, I believe there is some merit in building a tool for Emacs.

1. Never having to leave Emacs. That's an additional context switch I can avoid.
2. Leverage all the powerful features of Org-mode: LaTeX, tables, and the whole to-do ecosystem. Ties in well with my [[/posts/org_mode_workflow_preview/][org-mode workflow]].
3. Be in full control your second brain, and access it offline.

There are already several packages in Emacs that have some overlapping functionality, including [[https://github.com/Kungsgeten/org-brain][org-brain]], [[https://github.com/EFLS/zetteldeft][zetteldeft]], and [[https://github.com/l3kn/org-zettelkasten][org-zettelkasten]]. Here's what makes org-roam different:

First, in org-roam, the ordinary org file-link syntax is used. Contrast this with org-brain which uses org heading IDs, and zetteldeft that uses a special indicator. Org-roam is a plug-and-play solution that should work with existing Org files. This means org-roam can remain small, and its behaviour is predictable (it's just 300 LOC now).

Second, org-roam mimics more closely Roam's interface of an always- updating sidebar that shows backlinks and their preview content. This is as far as I know unique to org-roam at the time of writing.

** Shut Up and Show Me the Goods
   :PROPERTIES:
   :CUSTOM_ID: shut-up-and-show-me-the-goods
   :END:

Alright, alright.

I'm going to be slightly unconventional here, and first show you the graph of my notes. Of course, this graph is generated by org-roam. Feel free to view the image in another window, to bask at it in its full glory. This is a testament to how non-hierarchical note-taking can be, and should be.

[[https://d33wubrfki0l68.cloudfront.net/d4cc924e6b42bce196c4c330a62db750c0ebd2aa/aca0b/ox-hugo/graph.svg]]

Figure 1: org-roam graph

All of this starts from the note. A note is just a simple =.org= file in the directory. Any org file in the directory is considered part of the org-roam ecosystem. Notes are quickly linked together (and created if necessary) using =org-roam-insert=. Yes I know the GIFs look crappy here. Do me a favour and right click -> view image would you.

[[https://d33wubrfki0l68.cloudfront.net/efbdc6d1b757b47a3d100e964e5a668b3a881db0/703fe/ox-hugo/org-roam-insert.gif]]

Figure 2: org-roam-insert makes it easy to add links

Org-roam tracks all of these file links, and builds a cache asynchronously in the background. This cache is used to populate the backlinks buffer, which shows files that link to the current file, as well as some preview contents:

[[https://d33wubrfki0l68.cloudfront.net/caf00e01f2762110365beb820f757ccfe15e50df/5facd/ox-hugo/org-roam-buffer.gif]]

Figure 3: the org-roam buffer gives a nice navigable preview of backlinked content

If that's not enough, the org-roam graph shows is navigable. This is especially nice when using exwm, but that's not necessary.

[[https://d33wubrfki0l68.cloudfront.net/bb7cd39b7fd83c973e55ec8664125763b71fa637/cd1ac/ox-hugo/org-roam-graph.gif]]

Figure 4: navigating to files using the org-roam graph

** What's next?
   :PROPERTIES:
   :CUSTOM_ID: what-s-next
   :END:

I'd always been building out Org-roam as my workflow adapts. Now that there's a small community using it, I foresee that changing a little. I'd think org-roam will still be highly guided by my tastes, but I don't imagine forking off org-roam to be challenging, since the code is relatively simple.

A lot of the core functionality is already there, but some things could definitely be improved, including:

1. The aesthetics of the org-buffer.
2. Smaller graph generations around the current content.

Once the core features are stable, I'd like to start working on introducing features that the Emacs ecosystem makes possible:

- Keyboard-friendly navigation ⭐: perhaps using [[https://github.com/noctuid/link-hint.el][link-hint]] or the like.
- Rendering small SVGs within Emacs.

** Give it a shot!
   :PROPERTIES:
   :CUSTOM_ID: give-it-a-shot
   :END:

Give it a try, and [[mailto:jethrokuan95@gmail.com][let me know what you think]]. What else would you like to see?
