#+TITLE: Automatic gtags integration for Emacs using Git
#+URL: https://posts.michaelks.org/automatic-gtags-integration-emacs-git/
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2020年 02月 20日 星期四 22:23:29 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
* Automatic gtags integration for Emacs using Git
  :PROPERTIES:
  :CUSTOM_ID: automatic-gtags-integration-for-emacs-using-git
  :END:

It's fairly common to see automatic ctags hooks setup for Vim, but until recently I haven't been able to get it working in Emacs. Here's how to do it.

First, create a directory to contain the git hooks to be added in all new repos.

#+BEGIN_EXAMPLE
  git config --global init.templatedir '~/.git_template'
  mkdir -p ~/.git_template/hooks
#+END_EXAMPLE

Next, add the main script. Place this in =~/.git_template/hooks/gtags= and mark as executable:

#+BEGIN_EXAMPLE
  #!/bin/sh
  set -o errexit -o nounset

  PATH="/usr/local/bin:$PATH"

  main() (
   root_dir="$(git rev-parse --show-toplevel)"
   git_dir="$(git rev-parse --git-dir)"

   cd "$root_dir"
   trap 'rm -f GPATH GRTAGS GTAGS gtags.files' EXIT
   git grep --cached --files-with-matches "" > gtags.files
   gtags --gtagslabel=pygments
   rm gtags.files
   mv GPATH GRTAGS GTAGS "$git_dir/"

   echo "gtags index created at $git_dir/GTAGS"
  )

  main
#+END_EXAMPLE

Note that the generated tags file is in placed in the =.git= directory, to avoid cluttering up the directory tree and having to add another entry in =.gitignore=. This is the key feature for me --- it makes it feel truly automatic and seamless.

Next, add hooks that wrap this script. The first three are =post-commit=, =post-merge=, and =post-checkout= and should contain the following:

#+BEGIN_EXAMPLE
  #!/bin/sh
  .git/hooks/gtags >/dev/null 2>&1 &
#+END_EXAMPLE

Lastly, add one for =post-rewrite=:

#+BEGIN_EXAMPLE
  #!/bin/sh
  case "$1" in
   rebase) exec .git/hooks/post-merge ;;
  esac
#+END_EXAMPLE

Once finished, use =git init= and =git gtags= in existing repositories to copy the hooks in and generate tags. New repositories will do this automatically.

To get this working in Emacs depends on which gtags package you have installed. Unfortunately, =global= does not have an option to directly change where the tags file is read from, and neither do any of the gtags packages I've seen. However, it is possible to set two environment variables to attain this functionality instead, =GTAGSROOT= and =GTAGSDBPATH=.

#+BEGIN_EXAMPLE
  (defun gtags-env-patch (orig &rest args)
   (if-let* ((project-root (file-truename (locate-dominating-file "." ".git")))
   (git-dir (expand-file-name ".git" project-root))
   (process-environment (append
   (list (format "GTAGSROOT=%s" project-root)
   (format "GTAGSDBPATH=%s" git-dir))
   process-environment)))
   (apply orig args)
   (apply orig args)))
#+END_EXAMPLE

Then, you can wrap the appropriate functions using [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Advising-Functions.html][=advice=]].

For [[https://github.com/syohex/emacs-counsel-gtags][counsel-gtags]] (i.e., ivy completion):

#+BEGIN_EXAMPLE
  (advice-add #'counsel-gtags-find-reference :around #'gtags-env-patch)
  (advice-add #'counsel-gtags-find-symbol :around #'gtags-env-patch)
  (advice-add #'counsel-gtags-find-definition :around #'gtags-env-patch)
  (advice-add #'counsel-gtags-dwim :around #'gtags-env-patch)
#+END_EXAMPLE

For [[https://github.com/syohex/emacs-helm-gtags][helm-gtags]]:

#+BEGIN_EXAMPLE
  (advice-add #'helm-gtags-find-tag :around #gtags-env-patch)
  (advice-add #'helm-gtags-dwim :around #'gtags-env-patch)
  (advice-add #'helm-gtags-find-tag-other-window #'gtags-env-patch)
#+END_EXAMPLE

That's it. Now any new repositories will be automatically indexed whenever they are checked out, committed, or rebased, and the tags file will be found seamlessly without any user input.

A working example can be found [[https://github.com/msanders/setup/blob/master/symlinks/git/.git_template/hooks][here]] in my setup repo.
