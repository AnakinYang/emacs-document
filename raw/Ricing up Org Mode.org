#+TITLE: Ricing up Org Mode
#+URL: https://lepisma.github.io/2017/10/28/ricing-org-mode/
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2018年 10月 22日 星期一 11:45:55 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
This is a short post pulling in [[https://www.reddit.com/r/unixporn/comments/73vwpa/stumpwm_light_colors_with_purple_accent/dnvqwt8/?context=1][my comment]] on a /r/unixporn submission where I
这是一个简短的帖子拉在[[https://www.reddit.com/r/unixporn/comments/73vwpa/stumpwm_light_colors_with_purple_accent/dnvqwt8 ?上下文=1][我的评论]]在a /r/unixporn提交的地方
document my Org mode dotfiles for a word processor like interface. The aim is to
文档我的组织模式dotfiles的文字处理器一样的接口。目的是
recreate a [[https://www.reddit.com/r/unixporn/comments/6lj3h3/stumpwmkde_emacs_org_mode_writing_setup/][rice]] I submitted on /r/unixporn some time back. Shown below is a demo
重新创建一个[[https://www.reddit.com/r/unixporn/comments/6lj3h3/stumpwmkde_emacs_org_mode_writing_setup/][大米]]我提交的/r/unixporn前一段时间。下面是一个演示
of what the thing actually looks like.
它实际的样子。

Following screencast shows the setup in action.
下面的视频显示了正在运行的设置。

[[https://lepisma.github.io/2017/10/28/ricing-org-mode/demo.png]]
[[https://lepisma.github.io/2017/10/28/ricing-org-mode/demo.png]]

The look is inspired from the style used by [[https://edwardtufte.github.io/et-book][Edward Tufte]] in his books. A
该外观的灵感来自于[[https://edwardtufte.github]使用的风格。[爱德华·塔夫特]]在他的书中。一个
replication of the style in CSS is up on github for free at [[https://edwardtufte.github.io/tufte-css/][tufte-css]]. Other
在github上可以免费复制CSS样式，网址是[[https://edwardtufte.github.io/tuft-css/][tuft-css]]。其他
than the proper spacing and margins, the thing that I like in Tufte's style is
比合适的间距和空白，我喜欢Tufte的风格是
the font [[https://edwardtufte.github.io/et-book][ET Book]] which is an old-style serif font with beautiful /italics/.
字体[[https://edwardtufte.github。[ET - Book]] [ET - Book]]是一种旧式的衬线字体，有漂亮的斜体。

[[https://lepisma.github.io/2017/10/28/ricing-org-mode/et-book.png]]
[[https://lepisma.github.io/2017/10/28/ricing-org-mode/et-book.png]]

Figure 2:
图2:

Et Book font
和书

To start, we need a nice looking light color scheme so that faces other than
首先，我们需要一个好看的浅色方案，使脸以外
that of Org mode look decent. I selected [[https://github.com/nashamri/spacemacs-theme][spacemacs-light]] mostly because I use
Org模式看起来不错。我选择[[https://github.com/nashamri/spacemacs-theme][spacemacs-light]]主要是因为我使用
spacemacs and it is pretty complete as far as number of faces covered is
航天飞机，就所覆盖的面数而言，它是相当完整的
concerned. Also, it has a good off-white background (=#fbf8ef=). There are three
担心。此外，它有一个良好的灰白色背景(=#fbf8ef=)。有三个
basic steps involved from here:
从这里涉及的基本步骤:

- Setting faces and themes
-设置面孔和主题
- Padding and stuff
-填充和材料
- Other Org-mode visual and usability tweaks
-其他组织模式的视觉和可用性调整

** 1 Faces
* * 1的脸

We will set Et Book (named =EtBembo=) font to most of the org mode. Get the font
我们将设置Et Book(命名=EtBembo=)字体为大部分的组织模式。获得字体
[[https://github.com/edwardtufte/et-book][here]]. If you are using spacemacs, the easy way is to use the =theming= layer in
[[https://github.com/edwardtufte/et-book][这]]。如果您正在使用spacemacs，最简单的方法是使用=theming=层
spacemacs to set faces. My face config are available [[https://github.com/lepisma/rogue/blob/75ab1c3422b409f41daa4c003b931e869eed0914/config.el#L205][here]]. For each face, the
宇航员们来做鬼脸。我的面部配置是可用的[[https://github.com/lepisma/rogue/blob/75ab1c3422b409f41daa4c003b931e869eed0914/config.el#L205][这里]]。对于每一张脸
second set of properties are for the light theme (spacemacs-light). I have set
第二组属性是light主题(spacemacs-light)。我已经设置
the =variable-pitch= font to be =EtBembo= (along with title and stuff) and enable
=variable-pitch= font to be =EtBembo=(以及title和stuff)和enable
=variable-pitch-mode= when in an org buffer.
=可变间隔模式=在组织缓冲区中。

Note that unlike other face settings, =org-indent='s =(:inherit (org-hide fixed-pitch))= has a crucial effect of aligning text under Org heading in a
注意，与其他face设置不同的是，= Org -indent='s =(:inherit (Org -hide fixed pitch))=有一个关键的作用，就是将Org标题下的文本对齐到a中
non-monospace font, so you might not want to miss that.
非monospace字体，所以你可能不想错过它。

** 2 Padding
* * 2填充

There are a few places where you can gain some breathing space.
有几个地方你可以获得一些喘息的空间。

- /Line spacing/
——/行间距

Per buffer line spacing can be set using the variable =line-spacing=. Something
每个缓冲区的行间距可以使用变量=行间距=设置。的东西
like 0.1 goes well here.
比如0。1。

- /Top padding/
——/顶部填充

Similar to =mode-line=, Emacs also has =header-line= for windows. Setting its
与=mode-line=类似，Emacs也有=header-line= for windows。将其
format to empty string =(setq header-line-format " ")= gives you top padding.
format to empty string =(setq header-line-format " ")=给你一个顶部填充。
Also by changing header-line face height, you can change this spacing.
也可以通过改变顶线面高度来改变间距。

- /Side padding/
——/填充/

Adding side spaces is possible by setting margin width. You also need to reset
可以通过设置边距宽度来添加边距。您还需要重置
the buffer to make the change visible. Here is a function that does that:
使更改可见的缓冲区。这是一个这样的函数:

#+BEGIN_EXAMPLE
(lambda () (progn
(setq left-margin-width 2)
(setq right-margin-width 2)
(set-window-buffer nil (current-buffer))))
#+END_EXAMPLE

If you need padding all around the frame so that everything (including
如果你需要填充所有的框架，使一切(包括
mode-line) goes inside the padded view, you can set =internal-border-width=.
模式行)进入填充视图，您可以设置=internal-border-width=。

You can also try [[https://github.com/joostkremers/writeroom-mode][writeroom-mode]] which makes the writing buffer cleaner and has
您也可以尝试[[https://github.com/joostkremers/writeroom-mode][writeroom-mode]]，这使得写入缓冲区更干净
settings for many of the padding related stuff. One neat feature is that it
许多填充相关的设置。一个巧妙的特性是它
makes the buffer text centered and hides mode line. I don't use it much since my
使缓冲区文本居中并隐藏模式行。自从我的。我就不怎么用它了
current settings reproduce pretty much what I need from it. Nevertheless, [[https://github.com/lepisma/rogue/blob/75ab1c3422b409f41daa4c003b931e869eed0914/packages.el#L264-L287][here
当前的设置几乎复制了我所需要的。然而,[[https://github.com/lepisma/rogue/blob/75ab1c3422b409f41daa4c003b931e869eed0914/packages.el L264-L287][在这里
is some config]] for writeroom.
是一些配置]]为编辑室。

** 3 Other tweaks
** 3其他调整

Whatever information your mode line might be displaying, most likely it can be
无论您的模式行可能显示什么信息，它都很可能是
turned off if you are aiming for a distraction free setup. Spacemacs provide a
关闭，如果你的目标是一个分心自由设置。Spacemacs提供一个
minor mode =hidden-mode-line-mode= to hide the mode line, which can be added to
次要模式=隐藏模式行模式=隐藏可以添加到的模式行
your org hook. Some other minor settings follow:
你的组织。其他一些次要的设置如下:

#+BEGIN_EXAMPLE
(setq org-startup-indented t
org-bullets-bullet-list '(" ")
org-ellipsis "  "
org-pretty-entities t
org-hide-emphasis-markers t

org-agenda-block-separator ""
org-fontify-whole-heading-line t
org-fontify-done-headline t
org-fontify-quote-and-verse-blocks t)
#+END_EXAMPLE

Also try disabling =hl-line-mode= in org-mode as varying line heights make these
还可以尝试禁用=hl-line-mode= in org-mode，因为线的高度会发生变化
highlights look bad. Install [[https://github.com/Fuco1/org-pretty-table][org-pretty-table-mode]] for getting beautiful table
突出了看起来很糟糕。安装[[https://github.com/Fuco1/org-pretty-table]]以获得漂亮的表
borders. Other stuff like latex (=org-latex-toggle-fragment=) and image previews
边界。其他的像latex (=org-latex-toggle-fragment=)和图片预览
(=org-image-toggle-inline=) come bundled in with org.
(=org-image-toggle-inline=)与org捆绑在一起。

[[https://github.com/lepisma/rogue/tree/75ab1c3422b409f41daa4c003b931e869eed0914][Here]] is the snapshot of my Emacs dotfiles with config related to this post.
[https://github.com/lepisma/rogue/tree/75ab1c3422b409f41daa4c003b931e869eed0914][这里]]是我的Emacs dotfiles的快照，配置与这篇文章相关。
