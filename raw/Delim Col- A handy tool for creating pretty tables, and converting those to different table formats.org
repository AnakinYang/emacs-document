#+TITLE: Delim Col: A handy tool for creating pretty tables, and converting those to different table formats
#+URL: https://emacsnotes.wordpress.com/2018/09/24/delim-col-a-handy-tool-for-creating-pretty-tables-and-converting-those-to-different-table-formats/
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2018年 10月 22日 星期一 11:53:10 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
* A Problem ... and a Solution
一个问题……和一个解决方案
:PROPERTIES:
属性:
:CUSTOM_ID: a-problem-and-a-solution
:CUSTOM_ID a-problem-and-a-solution
:END:
结束:

You are given the following table [[https://github.com/emacs-mirror/emacs/blob/75386e305f388ff51bc8cf9945f52c29c14427cd/lisp/delim-col.el#L35][1]]
您将收到以下表格[[https://github.com/emacs-mirror/emacs/blob/75386e305f388ff51bc8cf52c29c14427cd/lisp/delim-col.el# L35][1]]

#+BEGIN_EXAMPLE
a b c d
aaaa bb ccc ddddd
aaa bbb cccc dddd
aa bb ccccccc ddd
#+END_EXAMPLE

How would you generate this table
如何生成这个表

#+BEGIN_EXAMPLE
[ a , b , c , d ]
[ aaaa, bb , ccc , ddddd ]
[ aaa , bbb, cccc , dddd ]
[ aa , bb , ccccccc, ddd ]
#+END_EXAMPLE

and this table
和这个表

#+BEGIN_EXAMPLE
a [ b , c ] d
aaaa [ bb , ccc ] ddddd
aaa [ bbb, cccc ] dddd
aa [ bb , ccccccc ] ddd
#+END_EXAMPLE

and this table
和这个表

#+BEGIN_EXAMPLE
[ <a> , <b> , <c> , <d> ]
[ <aaaa>, <bb> , <ccc> , <ddddd> ]
[ <aaa> , <bbb>, <cccc> , <dddd> ]
[ <aa> , <bb> , <ccccccc>, <ddd> ]
#+END_EXAMPLE

and this table
和这个表

#+BEGIN_EXAMPLE
a [ <b> , <c> ] d
aaaa [ <bb> , <ccc> ] ddddd
aaa [ <bbb>, <cccc> ] dddd
aa [ <bb> , <ccccccc> ] ddd
#+END_EXAMPLE

A answer is you use one of the Emacs' built-in library called =delim-col=[[https://github.com/emacs-mirror/emacs/blob/master/lisp/delim-col.el][1]].
答案是使用Emacs的一个内置库=delim-col=[[https://github.com/emacs-mirror/emacs/blob/master/lisp/delim-col.el][1]]。

* What does =delim-col= do?
* = delimi -col=做什么?
:PROPERTIES:
属性:
:CUSTOM_ID: what-does-delim-col-do
:CUSTOM_ID what-does-delim-col-do
:END:
结束:

The =delim-col= package describes itself as
包将自己描述为

#+BEGIN_QUOTE
# + BEGIN_QUOTE
=delim-col= helps to prettify columns in a text region or rectangle
= delimi -col=有助于美化文本区域或矩形中的列
#+END_QUOTE
# + END_QUOTE

In my opinion, the above description doesn't tell much about what it offers a user. Instead, I would describe the package as
在我看来，上面的描述并不能说明它为用户提供了什么。相反，我将把这个包描述为

#+BEGIN_QUOTE
# + BEGIN_QUOTE
=delim-col= creates pretty tables from a text region and helps convert those tables in to different table formats like =TSV=[[https://en.wikipedia.org/wiki/Tab-separated_values][1]], =CSV=[[https://en.wikipedia.org/wiki/Comma-separated_values][1]], =Org=[[https://www.gnu.org/software/emacs/manual/html_node/org/Built_002din-table-editor.html#Built_002din-table-editor][1]], =LaTeX=[[https://en.wikibooks.org/wiki/LaTeX/Mathematics#Matrices_and_arrays][1]], =GFM=[[https://docs.gitlab.com/ee/user/markdown.html#tables][1]], [[https://help.github.com/articles/organizing-information-with-tables/][2]]   or any other makeshift format that you may come up with.
= delim-col =创建漂亮的表从一个文本区域和帮助那些表转换到不同的表的格式,比如= TSV = [[https://en.wikipedia.org/wiki/Tab-separated_values] [1]], = CSV = [[https://en.wikipedia.org/wiki/Comma-separated_values] [1]], = Org = [[https://www.gnu.org/software/emacs/manual/html_node/org/Built_002din-table-editor.html Built_002din-table-editor][1]], =乳胶= [[https://en.wikibooks.org/wiki/LaTeX/Mathematics Matrices_and_arrays] [1]],=GFM=[[https://docs.gitlab.com/ee/user/markdown.html#tables][1]]， [[https://help.github.com/articles/organizing-informationwith-tables/][2]]或您可能想到的任何其他临时格式。
#+END_QUOTE
# + END_QUOTE

* What does =delim-col= NOT do?
* = delimi -col=不做什么?
:PROPERTIES:
属性:
:CUSTOM_ID: what-does-delim-col-not-do
:CUSTOM_ID what-does-delim-col-not-do
:END:
结束:

In doing the above conversions, you would expect that =delim-col= prompts you for all these parameters
在执行上述转换时，您可能希望= delimi -col=提示您输入所有这些参数

1. the regexp which separates each column
1. 分隔每个列的regexp
2. a string to be inserted before (and after) each column
2. 要插入每个列之前(和之后)的字符串
3. a string to be inserted between each column
3.在每一列之间插入一个字符串
4. a string to be inserted at the beginning (and end of) each row
4. 要插入到每行开头(和结尾)的字符串

and a way to add padding.
还有一种填充的方法。

Unfortunately, the above parameters are hard-coded and aren't gathered from the user on each run.
不幸的是，上面的参数是硬编码的，不是每次运行时从用户那里收集的。

* Step 1: Create a menu
*第一步:创建一个菜单
:PROPERTIES:
属性:
:CUSTOM_ID: step-1-create-a-menu
:CUSTOM_ID step-1-create-a-menu
:END:
结束:

Copy the =Emacs Lisp= snippet[[https://raw.githubusercontent.com/emacksnotes/emacsnotes.wordpress.com/master/my-delim-col-menu.el][1]] below to your =.emacs= and restart your =Emacs=.
复制下面的=Emacs Lisp=代码片段[[https://raw.githubusercontent.com/emacksnotes/emacsnotes.wordpress.com/master/my-delim-col-menu.el][1]]到你的=。并重新启动您的= emacs=。

This snippet does the following
这段代码执行以下操作

1. modifies the commands =delimit-columns-region= and =delimit-columns-rectangle= so that they prompt you for input on every run.
1. 修改命令=delimit-columns-region=和=delimit-columns-rectangle=，以便在每次运行时提示输入。
2. adds a sub-menu named =Extra Tools= to the menu. To this sub-menu, it adds another sub-menu named =Delimit Columns in ...=.
2. 将名为=Extra Tools=的子菜单添加到菜单中。在这个子菜单中，它在…=中添加了另一个名为=Delimit Columns的子菜单。

#+BEGIN_EXAMPLE
(defun my-delimits-column-region
(orig-fun &rest args)
(let
((delimit-columns-separator
(read-regexp
(format "%s (%s): " "Specify the regexp which separates each column" delimit-columns-separator)
(list delimit-columns-separator)))
(delimit-columns-before
(read-string
(format "%s (%s): " "Specify a string to be inserted before each column" delimit-columns-before)
nil nil delimit-columns-before))
(delimit-columns-after
(read-string
(format "%s (%s): " "Specify a string to be inserted after each column" delimit-columns-after)
nil nil delimit-columns-after))
(delimit-columns-str-separator
(read-string
(format "%s (%s): " "Specify a string to be inserted between each column" delimit-columns-str-separator)
nil nil delimit-columns-str-separator))
(delimit-columns-str-before
(read-string
(format "%s (%s): " "Specify a string to be inserted before the first column" delimit-columns-str-before)
nil nil delimit-columns-str-before))
(delimit-columns-str-after
(read-string
(format "%s (%s): " "Specify a string to be inserted after the last column" delimit-columns-str-after)
nil nil delimit-columns-str-after))
(delimit-columns-format
(let*
((choices
'(("Align Columns" . t)
("No Formatting")
("Align Separators" . separator)
("Pad Columns" . padding)))
(default-choice
(car
(rassoc delimit-columns-format choices)))
(choice
(completing-read
(format "%s (%s): " "Specify how to format columns" default-choice)
choices nil t nil nil default-choice)))
(message "%s" choice)
(assoc-default choice choices))))
(apply orig-fun args)))

(advice-add 'delimit-columns-region :around #'my-delimits-column-region)
(advice-add 'delimit-columns-rectangle :around #'my-delimits-column-region)

(define-key-after global-map
[menu-bar extra-tools]
(cons "Extra Tools"
(easy-menu-create-menu "Extra Tools" nil))
'tools)

(easy-menu-define my-delim-col-menu nil "Menu for Delim Col"
'("Delimit Columns in ..."
["Region" delimit-columns-region :help "Prettify all columns in a text region"]
["Rectangle" delimit-columns-rectangle :help "Prettify all columns in a text rectangle"]
"---"
["Customize" delimit-columns-customize :help "Customization of `columns' group"]))

(easy-menu-add-item (current-global-map) '("menu-bar" "extra-tools") my-delim-col-menu)
#+END_EXAMPLE

* Step 2: Ensure that you have the =Extra Tools= submenu
*步骤2:确保您有=额外的工具=子菜单
:PROPERTIES:
属性:
:CUSTOM_ID: step-2-ensure-that-you-have-the-extra-tools-submenu
:CUSTOM_ID step-2-ensure-that-you-have-the-extra-tools-submenu
:END:
结束:

Once you restart your Emacs, you would see an entry for =Extra Tools= in the menu bar.  If you aren't seeing this submenu, repeat the previous step.
重新启动Emacs后，您将在菜单栏中看到=Extra Tools=的条目。如果您没有看到这个子菜单，请重复前面的步骤。

* Step 3: Copy-paste the table in to an Emacs buffer
*步骤3:将表复制粘贴到Emacs缓冲区中
:PROPERTIES:
属性:
:CUSTOM_ID: step-3-copy-paste-the-table-in-to-an-emacs-buffer
:CUSTOM_ID step-3-copy-paste-the-table-in-to-an-emacs-buffer
:END:
结束:

Copy-paste the input table either from this article or from the =delim-col= library [[https://github.com/emacs-mirror/emacs/blob/75386e305f388ff51bc8cf9945f52c29c14427cd/lisp/delim-col.el#L35][1]].  It is important to note that the table scraped from this article will have spaces (and not tabs), but the one from =delim-col= will have tabs.
复制粘贴的输入表从本文或= delim-col =图书馆[[https://github.com/emacs-mirror/emacs/blob/75386e305f388ff51bc8cf9945f52c29c14427cd/lisp/delim-col.el胶卷][1]]。重要的是要注意,从本文表刮将空格(而不是标签),但一个来自= delim-col =选项卡。

* Step 4: Mark the region or rectangle
*步骤4:标记区域或矩形


* Step 5: Do the conversion
*第五步:转换
:PROPERTIES:
属性:
:CUSTOM_ID: step-5-do-the-conversion
:CUSTOM_ID step-5-do-the-conversion
:END:
结束:

[[https://emacsnotes.files.wordpress.com/2018/09/screenshot-from-2018-09-23-22-08-05.png?w=740]]
[[https://emacsnotes.files.wordpress.com/2018/09/screenshot -从- 2018 - 09 - 23 - 22 - 08 - 05. - png?w=740]]

Emacs will prompt you for further input.   Key in the parameters as you deem fit.
Emacs将提示您进一步的输入。输入你认为合适的参数。

The prompt string shows the factory default settings, and they are enclosed within  =()=. You can press =Enter= to accept the factory settings.
提示字符串显示工厂默认设置，它们包含在=()=中。您可以按=Enter=接受工厂设置。

When copy-pasting the original table from this web article in to your Emacs, the table will contain spaces. So, when prompted with =Specify the regexp which separates each column= use  = += (i.e. =SPC+=).
当将本文中的原始表复制到Emacs中时，该表将包含空格。因此，当提示=时，指定分隔每一列的regexp = use = +=(即=SPC+=)。

When prompted with =Specify how to format columns= you can press =TAB= , and choose among the candidates shown.  As you see from screenshot below, for my own run, I chose =Align Separators=.
当提示=时，指定如何格式化列=您可以按=TAB=，并在显示的候选项中进行选择。从下面的屏幕截图中可以看到，对于我自己的运行，我选择了=Align separator =。

[[https://emacsnotes.files.wordpress.com/2018/09/screenshot-from-2018-09-23-22-28-54.png?w=740]]
[[https://emacsnotes.files.wordpress.com/2018/09/screenshot -从- 2018 - 09 - 23 - 22 - 28 - 54. png?w=740]]

Here is the output I get at the end of one such run.
这是我在一次这样的运行结束时得到的输出。

[[https://emacsnotes.files.wordpress.com/2018/09/screenshot-from-2018-09-23-22-33-24.png?w=740]]
[[https://emacsnotes.files.wordpress.com/2018/09/screenshot -从- 2018 - 09 - 23 - 22 - 33 - 24. png?w=740]]

* Concluding Words
*结束的话
:PROPERTIES:
属性:
:CUSTOM_ID: concluding-words
:CUSTOM_ID concluding-words
:END:
结束:

You can pose the original problem to experienced users of Emacs.  Each user will have his own suggestions.  Most users will suggest rectangle commands[[https://www.gnu.org/software/emacs/manual/html_node/emacs/Rectangles.html][1]].  Some users will suggest that you use =org-table-convert-region=[[https://github.com/emacs-mirror/emacs/blob/d0e2a341dd9a9a365fd311748df024ecb25b70ec/lisp/org/org-table.el#L579][1]] to convert the original table in to =Org=-format table[[https://www.gnu.org/software/emacs/manual/html_node/org/Built_002din-table-editor.html#Built_002din-table-editor][1]], and create a makeshift code based on =orgtbl-to-generic= [[https://github.com/emacs-mirror/emacs/blob/d0e2a341dd9a9a365fd311748df024ecb25b70ec/lisp/org/org-table.el#L4798][1]].  (I bet, no user will suggest =delim-col= because it is a package which lacks an entry in the user manual.) None of the solutions you hear have the simplicity and quickness as =delim-col=.  In my opinion,  =delim-col= is a very useful tool to have in your toolkit.
您可以向Emacs的资深用户提出最初的问题。每个用户都有自己的建议。大多数用户将显示矩形命令[[https://www.gnu.org/software/emacs/manual/html_node/emacs/Rectangles.html][1]]。一些用户会建议你使用= org-table-convert-region = [[https://github.com/emacs-mirror/emacs/blob/d0e2a341dd9a9a365fd311748df024ecb25b70ec/lisp/org/org-table.el L579][1]]将原表= Org =格式表[[https://www.gnu.org/software/emacs/manual/html_node/org/Built_002din-table-editor.html Built_002din-table-editor] [1]],创建一个基于= orgtblto -generic= [[https://github.com/emacs-mirror/emacs/blob/d0e2a341dd9a9a365fd311748df024ecb25b70ec/lisp/org/org-table.el#L4798][1]的临时代码。您听到的解决方案都不具有= delimi -col=那样的简单性和快速性。在我看来，= delimi -col=是您的工具箱中非常有用的工具。

* Appendix
* Appendix
:PROPERTIES:
属性:
:CUSTOM_ID: appendix
:CUSTOM_ID:附录
:END:
结束:

This article on =delim-col= was created as an aid to one of my friends[[https://www.reddit.com/r/emacs/comments/9i2o7r/quoting_two_columns_of_text_using_macros/][1]], a newcomer to Emacs. She wanted to convert a table scraped from web[[https://useast.ensembl.org/info/genome/stable_ids/prefixes.html][1]] in to a Python dictionary[[https://docs.python.org/3/tutorial/datastructures.html#dictionaries][1]].
这篇关于=delim-col=的文章是为了帮助我的一个朋友[[https://www.reddit.com/r/emacs/comments/9i2o7r/quoting_two_columns_of_text_using_macros/][1]，一个Emacs新手。她想把从web[[https://useast.bl.org/info/genome/stable_ids/prefixes.html]中提取的表转换成Python字典[[https://docs.python.org/3/tutorial/datastructures.html# dictionary][1]]。

Specifically, she wanted to convert an HTML  table that looks like this
具体来说，她想要转换一个像这样的HTML表

[[https://emacsnotes.files.wordpress.com/2018/09/screenshot-2018-9-23-ensembl-stable-id-prefixes.png?w=740]]
[[https://emacsnotes.files.wordpress.com/2018/09/screenshot - 2018 - 9 - 23 -运用-稳定- id - prefixes.png?w=740]]

in to a =python= dictionary that looks like this
在一个像这样的=python=字典中

[[https://emacsnotes.files.wordpress.com/2018/09/screenshot-from-2018-09-24-00-04-58.png?w=740]]
[[https://emacsnotes.files.wordpress.com/2018/09/screenshot -从- 2018 - 09 - 24 - 00 - 04 - 58. png?w=740]]

With a little imagination, it is easy to see how she can use =delim-col= to achieve much of what she wants.
只要有点想象力，就很容易看出她如何使用= delimo -col=来实现她想要的很多东西。

That said, I hear those of you asking me “What if the second column in the friend's table happened to be numeric, and she didn't want the numeric fields quoted ...”.  In this case, I suppose, =delim-col= doesn't have anything immediate to offer, and I am afraid, the friend needs to switch to other means.
也就是说，我听到有人问我“如果朋友表中的第二列恰好是数字，而她不希望数字字段被引用……”。在这种情况下，我想= delimi -col=没有任何直接的东西可以提供，我担心，朋友需要切换到其他方式。
