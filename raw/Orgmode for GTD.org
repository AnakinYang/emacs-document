#+TITLE: Orgmode for GTD
#+URL: https://emacs.cafe/emacs/orgmode/gtd/2017/06/30/orgmode-gtd.html
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2018年 09月 17日 星期一 17:16:21 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
* Introduction
*介绍
:PROPERTIES:
属性:
:CUSTOM_ID: introduction
:CUSTOM_ID:介绍
:END:
结束:

I've been using [[http://orgmode.org/][Orgmode]] to implement
我一直使用[[http://orgmode.org/][Orgmode]]来实现
the [[https://en.wikipedia.org/wiki/Getting_Things_Done][GTD methodology]] for the
[[https://en.wikipedia.org/wiki/Getting_Things_Done][GTD方法论]]
last 4 years.
持续4年。

Rather than explaining the GTD methodology itself or how Orgmode works, in this
而不是解释GTD方法本身或Orgmode是如何工作的
post I'll detail how I use Orgmode to implement GTD.
在这篇文章中，我将详细介绍我是如何使用Orgmode来实现GTD的。

If you don't know Orgmode and are curious about it, you should head
如果你不知道Orgmode并且对它很好奇，你应该去看看
to [[http://orgmode.org/][its website]] first.
先到[[http://orgmode.org/][其网站]]。

#+BEGIN_QUOTE
# + BEGIN_QUOTE
After 4 years of using [[https://twitter.com/hashtag/gtd?src=hash][#gtd]] daily with [[https://twitter.com/hashtag/orgmode?src=hash][#orgmode]], I now have 39,175 lines of orgmode in 4 files + archives. [[https://twitter.com/hashtag/emacs?src=hash][#emacs]]
使用[[https://twitter.com/hashtag/gtd?src=hash][#gtd]] daily with [[https://twitter.com/hashtag/orgmode?src=hash][#orgmode]]，我现在有4个文件+归档的39175行orgmode。emacs [[https://twitter.com/hashtag/emacs?src=hash] [#]]

--- Nicolas Petton (@NicolasPetton) [[https://twitter.com/NicolasPetton/status/879673555616714752][June 27, 2017]]
——NicolasPetton (@NicolasPetton) [[https://twitter.com/NicolasPetton/status/879673555616714752][2017年6月27日]
#+END_QUOTE
# + END_QUOTE

* The orgmode files
*组织模式文件
:PROPERTIES:
属性:
:CUSTOM_ID: the-orgmode-files
:CUSTOM_ID the-orgmode-files
:END:
结束:

I split my GTD in four separate files:
我把我的GTD分成四个不同的文件:

- =inbox.org=: where I collect everything;
- =inbox.org=:我收集一切;
- =gtd.org=: where I put all my projects;
- =gtd.org=:我把我所有的项目;
- =someday.org=: All inactive tasks that I might do at some point in the future,
- =someday.org=:所有我将来可能会做的不活跃的任务，
but don't want to see all the time;
但并不是一直想看;
- =tickler.org=: I put entries in this file with
- =tickler.org=:我把条目放在这个文件中
a [[http://orgmode.org/manual/Timestamps.html][timestamp]] to get reminded at
一个[[http://orgmode.org/manual/Timestamps.html][timestamp]]会被提醒
the right moment.
正确的时刻。

It's important to add these files to the agenda file (more on the agenda later),
将这些文件添加到议程文件中是很重要的(稍后会有更多关于议程的内容)，
like the following:
如下:

#+BEGIN_EXAMPLE
(setq org-agenda-files '("~/gtd/inbox.org"
"~/gtd/gtd.org"
"~/gtd/tickler.org"))
#+END_EXAMPLE

* 1. The GTD inbox
* 1。GTD收件箱
:PROPERTIES:
属性:
:CUSTOM_ID: 1-the-gtd-inbox
:CUSTOM_ID 1-the-gtd-inbox
:END:
结束:

One of the most important aspects of GTD is the inbox. Every thought should be
GTD最重要的方面之一是收件箱。每个想法都应该是
collected there, and processed later on.
在那里收集，然后处理。

[[https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/GTDcanonical.png/1280px-GTDcanonical.png]]
[[https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/GTDcanonical.png/1280px-GTDcanonical.png]]

Orgmode has a great feature that fits really well with this
Orgmode有一个很棒的功能，非常适合这个功能
concept: [[http://orgmode.org/manual/Capture.html][org-capture]].
概念:[[http://orgmode.org/manual/Capture.html] [org-capture]]。

Capturing a thought is one key press away: simply Press =C-c c=, and a capture
捕获一个想法只需按下一个键:简单地按= c -c c=，然后捕获
popup will appear in Emacs. Once you're done capturing, =C-c C-c= and it will
弹出式将出现在Emacs。捕获完成后，=C-c C-c=
get stored in the inbox.
储存在收件箱里。

[[/img/gtd-capture.png]]
[[img /描述-capture.png]]

Here's how I set it up:
我是这样设置的:

#+BEGIN_EXAMPLE
(setq org-capture-templates '(("t" "Todo [inbox]" entry
(file+headline "~/gtd/inbox.org" "Tasks")
"* TODO %i%?")
("T" "Tickler" entry
(file+headline "~/gtd/tickler.org" "Tickler")
"* %i%? n %U")))
#+END_EXAMPLE

The syntax of capture templates is
捕获模板的语法是
explained
解释
[[http://orgmode.org/manual/Capture-templates.html#Capture-templates][here]]. It
[[http://orgmode.org/manual/Capture-templates.html Capture-templates][这]]。它
offers lots of customization options.
提供许多定制选项。

I press =C-c c t= to add an entry to my inbox, and =C-c c T= to add an entry to
我按下= c -c c t=向我的收件箱添加一个条目，并= c -c c t=向其中添加一个条目
the tickler (more on that later).
挠痒痒的(稍后会详细介绍)。

Here's how my inbox looks like:
我的收件箱是这样的:

[[/img/gtd-inbox.png]]
[[img /描述-inbox.png]]

My inbox is then processed and emptied daily. When processing the inbox,
我的收件箱每天都会被处理和清空。处理收件箱时，
I [[http://orgmode.org/manual/Refile-and-copy.html#Refile-and-copy][refile]] each
我[[http://orgmode.org/manual/Refile-and-copy.html Refile-and-copy][接力传送]]
entry that is actionable and belongs to a project using =C-c C-w=, moving the
可操作且属于使用=C-c C-w=的项目的项，移动
entry to the appropriate place. If need be, I create a new project out of it.
进入适当的地方。如果需要的话，我可以从中创建一个新项目。

I have set up the refile targets as follows:
我已经设置了重新填充的目标如下:

#+BEGIN_EXAMPLE
(setq org-refile-targets '(("~/gtd/gtd.org" :maxlevel . 3)
("~/gtd/someday.org" :level . 1)
("~/gtd/tickler.org" :maxlevel . 2)))
#+END_EXAMPLE

So that =C-c C-w= prompts me either for a project, the tickler, or someday/maybe
因此=C-c C-w=提示我要完成一个项目，或者某一天/也许
list.
列表。

* 2. The projects file
* 2。项目文件
:PROPERTIES:
属性:
:CUSTOM_ID: 2-the-projects-file
:CUSTOM_ID 2-the-projects-file
:END:
结束:

My main file is =gtd.org=. That's where I keep all my active projects. I usually
我的主文件是=gtd.org=。那是我保持所有活跃项目的地方。我通常
have around 30 active projects at the same time.
同时进行大约30个活动项目。

Each project contains actions to be performed. The first action of each project
每个项目都包含要执行的操作。每个项目的第一个动作
is called its “next action”, and that's always the one I will do when working on
叫做“下一个动作”，这总是我在工作时要做的动作
a project. Once a task is done, I mark it as such using the =DONE= todo keyword.
一个项目。一旦任务完成，我就使用= done = todo关键字标记它。

Here's an example project:
下面是一个例子:

[[/img/gtd-project-example.png]]
[[/ img / gtd-project-example.png]]

The completion percentage you see on the screenshot
您在屏幕截图中看到的完成百分比
is [[http://orgmode.org/manual/Checkboxes.html][yet another neat feature]] of
是[[http://orgmode.org/manual/Checkboxes.html][另一个整洁的功能]]的
Orgmode :)
Orgmode:)

Tagging is done using =C-c C-c= on a headline, whether it's a project or
标记是在标题上使用=C-c -c=完成的，不管它是一个项目还是
action. I use tags for several purposes:
行动。我使用标签有几个目的:

- Regular categories, like =:emacs:= or =:writing:=;
-常规类别，如=:emacs:=或=:writing:=;
- Tags that link to people, like =:daniel:=;
-链接到人的标签，如=:daniel:=;
- GTD contexts.
- GTD上下文。

GTD contexts are just regular tags, starting with =@=. I make heavy use of them
GTD上下文只是普通的标记，以=@=开头。我充分利用它们
in
在
[[http://orgmode.org/worg/org-tutorials/org-custom-agenda-commands.html][custom Org Agenda commands]].
[http://orgmode.org/worg/org-tutorials/org-customa-commands.html][自定义组织议程命令]。

My contexts tend to change over time, but I always have at least =@home=,
我的上下文会随着时间变化，但我总是至少有=@home=，
=@office=, =@travelling=, =@phone=, =@email=, =@errands= to filter out next
=@office=， =@travelling=， =@phone=， =@email=， =@errands=接下来过滤掉
actions based on my current location for instance.
例如，基于当前位置的操作。

** TODO keywords
* *做关键字
:PROPERTIES:
属性:
:CUSTOM_ID: todo-keywords
:CUSTOM_ID todo-keywords
:END:
结束:

I put a todo keyword in all project entries. I think I use fairly regular todo
我在所有项目条目中放置了一个todo关键字。我想我经常这样做
keywords: =TODO=, =WAITING=, =DONE= and =CANCELLED= mostly. The first two for
关键字:=TODO=， =WAITING=， =DONE=和= cancel = most。前两项
are used for incomplete states, and the last two for completed states.
用于不完全状态，后两个用于完成状态。

#+BEGIN_EXAMPLE
(setq org-todo-keywords '((sequence "TODO(t)" "WAITING(w)" "|" "DONE(d)" "CANCELLED(c)")))
#+END_EXAMPLE

When on a headline, press =C-c C-t= to set the TODO keyword.
在标题上，按=C-c C-t=设置TODO关键字。

I tend to avoid using timestamps in my projects as much as possible. The reason
我尽量避免在项目中使用时间戳。的原因
is simple: unless an entry is an appointment (to the dentist for instance) or
很简单:除非条目是预约(例如去看牙医)或
has a fixed deadline (a release scheduled with a customer), I should decide what
有一个固定的期限(与客户约定的发布时间)，我应该决定什么
to work on depending on the current context (among other things). This also
根据当前上下文(以及其他内容)继续工作。这也
keeps my agenda clean, free of any fake or self-imposed deadline or schedule.
保持我的日程干净，没有任何虚假的或自我设定的最后期限或时间表。

But scheduling sometimes makes sense. To do that, press =C-c C-s= on an entry,
但有时安排时间是有意义的。要做到这一点，输入=C-c C-s=，
and enter the date and/or time. To add a deadline, press =C-c C-d=. Note that
并输入日期和/或时间。要添加截止日期，请按=C-c C-d=。请注意,
Orgmode is quite smart about how you can enter a date, if you don't know about
如果你不知道，Orgmode在如何输入日期方面非常聪明
it, refer to
它,请参考
the [[http://orgmode.org/manual/Deadlines-and-scheduling.html][manual entry]].
[[http://orgmode.org/manual/Deadlines-and-scheduling.html][人工输入]]。

** Filtering projects & actions
**过滤项目和动作
:PROPERTIES:
属性:
:CUSTOM_ID: filtering-projects--actions
:CUSTOM_ID filtering-projects——行动
:END:
结束:

When deciding what to work on, I use
当决定要做什么的时候，我会使用
either [[http://orgmode.org/manual/Sparse-trees.html][sparse trees]] -- which
或者[[http://orgmode.org/manual/spartrees.html][稀疏树]]——哪个
makes it easy to filter the content of my GTD projects by tag, search term,
通过标签，搜索词，
etc., or I
等等,或者我
use
使用
[[http://orgmode.org/worg/org-tutorials/org-custom-agenda-commands.html][custom agenda commands]]. When
[[http://orgmode.org/worg/org-tutorials/org-custom-agenda-commands.html][自定义日程命令]]。当
discovering Orgmode, most people think that its agenda is just a regular
发现了Orgmode，大多数人认为它的日程只是一个常规
agenda. Sure, it does daily/weekly agendas, but it offers much more than
议程。当然，它有每天/每周的日程安排，但它提供的远不止这些
that. Quoting the manual:
那引用手册:

#+BEGIN_QUOTE
# + BEGIN_QUOTE
Org-mode's built-in agenda commands are powerful tools for searching your
组织模式的内置议程命令是搜索您的强大工具
notes and for gathering, sorting, filtering, and displaying your tasks.
用于收集、排序、筛选和显示任务。
#+END_QUOTE
# + END_QUOTE

I use custom agenda commands mostly to get an overview of actions by context or
我使用自定义议程命令主要是为了根据上下文或
tag. Here's an example custom agenda command that will display all actions for
标签。下面是一个示例自定义议程命令，它将显示所有操作
the =@office= context:
= @office =上下文:

#+BEGIN_EXAMPLE
(setq org-agenda-custom-commands
'(("o" "At the office" tags-todo "@office"
((org-agenda-overriding-header "Office")))))
#+END_EXAMPLE

Following the GTD principle, what I usually want is to only show the first
遵循GTD原则，我通常想要的是只显示第一个
action to be done (or next action) for each project with the =@office= tag.
使用=@office=标记为每个项目执行的操作(或下一个操作)。

That can be achieved using a skipping condition:
这可以实现使用跳跃式条件:

#+BEGIN_EXAMPLE
(setq org-agenda-custom-commands
'(("o" "At the office" tags-todo "@office"
((org-agenda-overriding-header "Office")
(org-agenda-skip-function #'my-org-agenda-skip-all-siblings-but-first)))))

(defun my-org-agenda-skip-all-siblings-but-first ()
"Skip all but the first non-done entry."
(let (should-skip-entry)
(unless (org-current-is-todo)
(setq should-skip-entry t))
(save-excursion
(while (and (not should-skip-entry) (org-goto-sibling t))
(when (org-current-is-todo)
(setq should-skip-entry t))))
(when should-skip-entry
(or (outline-next-heading)
(goto-char (point-max))))))

(defun org-current-is-todo ()
(string= "TODO" (org-get-todo-state)))
#+END_EXAMPLE

Creating custom agenda commands can be a bit tricky at first, one easy way is to
创建自定义议程命令一开始可能有点棘手，一种简单的方法是
customize them via =M-x customize-variable RET org-agenda-custom-commands=.
通过=M-x自定义变量RET组织议程自定义命令=对它们进行自定义。

To select an agenda command to execute, press =C-c a=.
要选择要执行的议程命令，请按=C-c a=。

* 3. The “Someday/Maybe” list
* 3。“有一天/也许”列表
:PROPERTIES:
属性:
:CUSTOM_ID: 3-the-somedaymaybe-list
:CUSTOM_ID 3-the-somedaymaybe-list
:END:
结束:

Did you notice that =someday.org= is not part of the agenda files set in
您是否注意到=someday.org=并不是设置的议程文件的一部分
=org-agenda-files=?
= org-agenda-files = ?

That's because I do not want to see any entry from this file appearing in my
那是因为我不想看到这个文件的任何条目出现在我的
agenda buffers, unless I'm doing my weekly review. That's exactly the purpose of
议程缓冲，除非我在做每周回顾。这就是
the “Someday/Maybe” list.
“有一天/也许”列表。

This file should be reviewed once a week as part of the weekly review (which I
这份文件应该作为每周回顾的一部分每周回顾一次
do this on Sunday evenings).
在星期天晚上这样做)。

During each weekly review, I move projects back and forth between the “active”
在每周回顾期间，我在“活动”之间来回移动项目。
state (in =gtd.org=) and “later” state (in =someday.org=).
状态(in =gtd.org=)和“稍后”状态(in =someday.org=)。

For instance, if a project has moved forward to a certain point, but I know that
例如，如果一个项目已经前进到某个点，但是我知道
it will stall for a few weeks for some reason, I move it to
由于某种原因，它会停滞几周，我把它移到
=someday.org=. During a later weekly review, I'll move it back to =gtd.org= when
= = someday.org。在以后的每周回顾中，我将把它移回=gtd.org= when
it will become active again.
它将再次激活。

To move projects around, I also use refiling.
为了移动项目，我也使用重新归档。

* 4. The tickler
* 4。的备忘录
:PROPERTIES:
属性:
:CUSTOM_ID: 4-the-tickler
:CUSTOM_ID 4-the-tickler
:END:
结束:

The tickler is one of the best concepts of GTD in my opinion.
在我看来，tickler是GTD最好的概念之一。

Let's say you will have to pay a bill in a month. You need to write it down in
假设你一个月后要付账单。你需要把它写下来
your GTD if you don't want to miss the deadline. But you also don't want to be
你的GTD，如果你不想错过最后期限的话。但你也不想成为那样的人
reminded of that each and every time you browse through your GTD projects: now
提醒你每次浏览GTD项目的时候:现在
is not the time to pay it.
现在不是支付的时候。

That's where the tickler kicks in: Add an entry to your tickler file with a
这就是tickler发挥作用的地方:用a向tickler文件添加一个条目
timestamp, and forget about it!
时间戳，忘记它吧!

When time will come, the action will appear in your Org Agenda, reminding you of
当时间来临时，行动将出现在你的组织议程中，提醒你
the bill you have to pay, and all you will have to do is moving it to your
你必须支付的账单，你所要做的就是把它转移到你的账户上
inbox. Until then, you can just focus on something else and free your mind from
收件箱。在那之前，你可以专注于其他事情，把你的思想从这些事情中解放出来
this task.
这一任务。

* References
*引用
:PROPERTIES:
属性:
:CUSTOM_ID: references
:CUSTOM_ID:引用
:END:
结束:

All reference documents are put in a =references= folder next to my Orgmode
所有参考文档都放在我的Orgmode旁边的一个=references=文件夹中
files. They are then linked (using =org-store-link=) from Dired buffers into my
文件。然后它们被链接(使用=org-store-link=)从Dired缓冲区到my
projects for quick access.
项目快速访问。

I also link emails (which I happen to read within Emacs) using =org-store-link=.
我还使用=org-store-link=链接电子邮件(我碰巧在Emacs中阅读了这些邮件)。

* Archiving
*存档
:PROPERTIES:
属性:
:CUSTOM_ID: archiving
:CUSTOM_ID:存档
:END:
结束:

During my weekly reviews, I archive done projects using =C-c C-x C-a=
在我的每周回顾中，我使用=C-c C-x C-a=来归档已完成的项目
(=org-archive-subtree-default=), which moved the entry at point to an archive
(=org-archive-subtree-default=)，它将条目移动到某个存档
file.
文件。

This way my GTD files remain uncluttered and I never delete any data.
这样我的GTD文件就会保持整洁，我也不会删除任何数据。

* Conclusion
*结论
:PROPERTIES:
属性:
:CUSTOM_ID: conclusion
结论:CUSTOM_ID:
:END:
结束:

This is a very wide topic, so obviously I haven't covered everything, but I hope
这是一个非常广泛的话题，显然我没有涵盖所有内容，但我希望
that explains the basics of how I use Orgmode to implement GTD.
这解释了我如何使用Orgmode来实现GTD的基础。

This is really only my way of doing it. Orgmode is such a moldable tool that I
这只是我的方法。Orgmode是这样一个可塑的工具，我
don't think that there are 2 exactly identical setups.
不要认为有两个完全相同的设置。
