#+TITLE: 5 useful Emacs modes for writers
#+URL: https://opensource.com/article/18/5/emacs-modes-writers
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2018年 05月 16日 星期三 21:01:04 CST]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
Not all writers work within the confines of a word processor. More than a few of us tap out words in a humble (and sometimes [[https://opensource.com/article/17/5/atom-text-editor-packages-writers][not so humble]]) text editor.
并不是所有的作家都在文字处理器的范围内工作。我们中有不少人是用一种不起眼的文本编辑器(有时是[[https://opensource.com/article/17/5/atom-text-editor-packages-writers][不是那么不起眼]])敲出单词的。

When you find a text editor that works for you, and works the way you want it to, you tend to hold onto it like that beaten up leather jacket, like that dog-eared book, or like that collection of old vinyl records.
当你找到一个适合你的文本编辑器，并以你想要的方式工作时，你会倾向于像那件破旧的皮夹克，那本折角的书，或者那套旧的黑胶唱片一样拿着它。

For some, that editor is vi or Vim. For others, it's Nano or Atom. For me, that editor is Emacs. Why? Mainly because of its variety of modes, including some crafted especially for writers.
对于一些人来说，编辑器是vi或Vim。另一些则是纳米或原子。对我来说，那个编辑器就是Emacs。为什么?主要是因为它的模式多种多样，包括一些专为作者制作的。

Here's a look at five Emacs modes that writers will find useful.
以下是作者将会发现有用的五种Emacs模式。

* Muse
*缪斯
:PROPERTIES:
属性:
:CUSTOM_ID: muse
:CUSTOM_ID:缪斯
:END:
结束:

When I stumbled upon [[https://www.gnu.org/software/emacs-muse/][Muse]] in the early 2000s, it quickly made Emacs my go-to tool for writing and publishing. You can use this mode to create and publish articles, reports, blog posts, web pages, recipes, poems, documentation, and more.
在21世纪初，我偶然发现了[[https://www.gnu.org/software/emacs-muse/][Muse]，它很快使Emacs成为我写作和出版的首选工具。可以使用此模式创建和发布文章、报告、博客文章、web页面、菜谱、诗歌、文档等。

Writing with Muse is simple. You format your work with a [[http://mwolson.org/static/doc/muse.html#Markup-Rules][markup language]] that's similar to Markdown, with a bit of HTML thrown in for good measure. The markup takes some getting used to, but you should be able to adapt to it quickly.
与缪斯一起写作很简单。您可以使用类似于Markdown的[[http://mwolson.org/static/doc/muse.html# markup - rules][标记语言]]来格式化您的工作，并适当地加入一些HTML。标记需要一些时间来适应，但是您应该能够快速地适应它。

Once you're done writing, you can publish your work as HTML or XHTML, [[http://blosxom.sourceforge.net/][Blosxom]], [[https://opensource.com/article/17/6/introduction-latex][LaTeX]], [[https://opensource.com/article/17/9/docbook][DocBook]], PDF, or [[https://en.wikipedia.org/wiki/Texinfo][Texinfo]].
一旦你完成写作,你可以发表你的工作作为HTML或XHTML, [[http://blosxom.sourceforge.net/] [Blosxom]], [[https://opensource.com/article/17/6/introduction-latex][乳胶]],[[https://opensource.com/article/17/9/docbook] [DocBook]], PDF,或[[https://en.wikipedia.org/wiki/Texinfo] [Texinfo]]。

[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_muse.png?itok=wK4i7pUJ]]
[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_muse.png?itok=wK4i7pUJ]]

* Org mode
*组织模式
:PROPERTIES:
属性:
:CUSTOM_ID: org-mode
:CUSTOM_ID org-mode
:END:
结束:

Like Emacs itself, people use [[https://orgmode.org/][Org mode]] for just about everything: from taking notes and [[https://opensource.com/article/17/4/emacs-extensions-organization][maintaining their task lists]], to writing and publishing blog posts, to [[https://opensource.com/article/18/2/how-create-slides-emacs-org-mode-and-revealjs][creating presentation slides]]. And a lot more.
像Emacs本身,人们使用[[https://orgmode.org/][组织模式]]的一切:记笔记和[[https://opensource.com/article/17/4/emacs-extensions-organization][维护任务列表]],写作和发表博客文章,[[https://opensource.com/article/18/2/how-create-slides-emacs-org-mode-and-revealjs][创建幻灯片]]。还有更多。

For writers, Org mode is a great way to outline what they're working on and to take notes. You can add links between your notes and outline points, which enables you to jump between bits of information when you need to. You can also add [[https://orgmode.org/org.html#Tags][tags]] to the headings in your notes to make it easier to find specific notes when you need them.
对于作者来说，组织模式是一个很好的方式来概括他们正在做什么，并做笔记。您可以在您的笔记和大纲点之间添加链接，这使您能够在需要时在信息位之间跳转。您还可以将[[https://orgmode.org/org.html#Tags][Tags]]添加到笔记的标题中，以便在需要特定笔记时更容易找到。

If you need to, you can [[https://orgmode.org/org.html#Exporting][export]] your work to a number of formats, including HTML, LaTeX, ODT, and Markdown.
如果需要，您可以[[https://orgmode.org/org.html# exports][export]]将您的工作转换成多种格式，包括HTML、LaTeX、ODT和Markdown。

[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_org-mode.png?itok=gw4CW8Dq]]
[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_org-mode.png?itok=gw4CW8Dq]]

* Flyspell
* Flyspell
:PROPERTIES:
属性:
:CUSTOM_ID: flyspell
:CUSTOM_ID flyspell
:END:
结束:

No matter how careful you are, typos and misspellings slip through as you're writing. Because of that, every writer should run his or her work through a spelling checker at least once.
不管你有多小心，在你写作的时候，打字错误和拼写错误总会不经意地出现。因此，每个作者都应该至少检查一次拼写检查。

I often use [[https://opensource.com/article/18/2/how-check-spelling-linux-command-line-aspell][Aspell]] when working with text files, but I find it's faster to check my spelling within Emacs using [[https://www-sop.inria.fr/members/Manuel.Serrano/flyspell/flyspell.html][Flyspell]]. As you might have guessed from the name, Flyspell is an on-the-fly spelling checker that works as you type.
在处理文本文件时，我经常使用[[https://opensource.com/article/18/2/how-check-spelling-linux-command- Aspell] [Aspell]]，但是我发现使用[[https://www-sop.inria.fr/members/Manuel.Serrano/flyspell/flyspell.html][Flyspell]可以更快地检查Emacs中的拼写。正如您可能从名字中猜到的，Flyspell是一个即时拼写检查器，可以在您键入时工作。

Flyspell highlights misspelled or unrecognized words. Click the mouse wheel on one of those words to pop up a list of correct spellings. Select the one that you want, or tell Flyspell to remember or ignore that word.
Flyspell突出拼写错误或无法识别的单词。点击其中一个单词的鼠标滚轮，就会弹出正确拼写的列表。选择一个你想要的，或告诉Flyspell记住或忽略这个词。

[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_flyspell.png?itok=kr_XX254]]
[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_flyspell.png?itok=kr_XX254]]

* wc Mode
*wc模式
:PROPERTIES:
属性:
:CUSTOM_ID: wc-mode
:CUSTOM_ID wc-mode
:END:
结束:

You might be writing for a print or online publication. You might have swallowed the myth of the [[https://torquemag.io/2018/04/optimal-content-length/][optimal length of a blog post]]. Or you might just be trying to learn to write short. No matter who you're writing for or why, sometimes you need to make sure your work stays within the boundaries of a word count.
你可能正在为印刷或在线出版物写作。你可能已经接受了[[https://torquemag]的神话。io/2018/04/optimal-content-length/][博客文章的最佳长度]。或者你可能只是想学写短一点。不管你是为谁写，为什么写，有时候你需要确保你的工作在字数范围内。

[[https://www.emacswiki.org/emacs/wc-mode.el][wc mode]] does one thing and does it well: It counts the number of words, lines, and characters in what you're writing. You can also highlight a section of text and get its word count.
[[https://www.emacswiki.org/emacs/wmode.el][wc模式]]做了一件事，而且做得很好:它计算你所写的字、行和字符的数量。您还可以高亮显示文本的某个部分并获取其字数。

To use wc mode, type =M-x wc= and the word count of what you're writing appears in the mini buffer at the bottom of the screen. What could be simpler?
要使用wc模式，键入=M-x wc=和您正在编写的单词计数将出现在屏幕底部的迷你缓冲区中。还有什么比这更简单的呢?

[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_wc-mode.png?itok=bhdicOuW]]
[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_wc-mode.png?itok=bhdicOuW]]

* WriteGood Mode
* WriteGood模式
:PROPERTIES:
属性:
:CUSTOM_ID: writegood-mode
:CUSTOM_ID writegood-mode
:END:
结束:

Writing clear prose takes a lot of work. One key to writing clearly is choosing the correct words. Equally important is knowing which words not to use. No matter your level of experience as a scribe, you can always use some help with that.
写清楚的散文需要大量的工作。写得清楚的一个关键是选择正确的单词。同样重要的是知道哪些词不能用。不管你作为抄写员的经验如何，你总能在这方面得到一些帮助。

That's where [[http://bnbeckwith.com/code/writegood-mode.html][WriteGood Mode]] comes in. It's designed to find common writing problems---mainly passive wording (which too many writers let slip through), duplicate words, and so-called [[https://en.wikipedia.org/wiki/Weasel_word][weasel words]]. WriteGood mode can also perform [[https://en.wikipedia.org/wiki/Readability_test][readability tests]] on your writing.
这就是[[http://bnbeckwith.com/code/writegoo-mode.html][WriteGood模式]]的作用。它的目的是找出常见的写作问题——主要是被动措辞(很多作者都忽略了这一点)、重复的单词和所谓的[[https://en.wikipedia.org/wiki/Weasel_word][weasel words]]。WriteGood模式也可以执行[[https://en.wikipedia.org/wiki/Readability_test][可读性测试]]。

The list of weasel and passive words that WriteGood mode uses is in the file =writegood-mode.el=. You can add or delete words by editing the file.
WriteGood模式使用的模糊和被动词汇列表在file = WriteGood -mode.el=中。您可以通过编辑文件来添加或删除单词。

[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_writegood.png?itok=MXvqarOG]]
[[https://opensource.com/sites/default/files/styles/panopoly_image_original/public/uploads/emacs_writegood.png?itok=MXvqarOG]]

** A few other modes worth mentioning
**其他一些模式值得一提
:PROPERTIES:
属性:
:CUSTOM_ID: a-few-other-modes-worth-mentioning
:CUSTOM_ID a-few-other-modes-worth-mentioning
:END:
结束:

If you're interested in screenwriting (or learning how to do it), you don't need to spend a lot of money on proprietary tools. Instead, take a look at [[https://github.com/rnkn/fountain-mode][Fountain mode]], which lets you work with [[https://fountain.io][Fountain]], a markup language for scripts based on Markdown. After you write your scripts, you can export them as HTML, PDF, or [[https://en.wikipedia.org/wiki/Final_Draft_(software)][Final Draft]] files.
如果你对写剧本感兴趣(或者学习如何写剧本)，你不需要花很多钱在专有工具上。相反，看看[[https://github.com/rnkn/fountain-mode][Fountain mode]]，它允许您使用[[https://fountain]。一个基于Markdown的脚本标记语言。编写完脚本后，可以将它们导出为HTML、PDF或[[https://en.wikipedia.org/wiki/Final_Draft_(software)][Final Draft]]文件。

Speaking of Markdown, if you write with that language, you'll want to use [[https://jblevins.org/projects/markdown-mode/][Markdown mode]]. It lets you add formatting using keystrokes or a menu, applies syntax highlighting, and saves your work as HTML. Markdown mode does a lot more, too.
说到Markdown，如果您使用这种语言进行编写，那么您将需要使用[[https://jblevins.org/projects/markdownmode/][Markdown模式]]。它允许您使用击键或菜单添加格式，应用语法高亮显示，并将您的工作保存为HTML。降价模式也有很多作用。

Distractions are everywhere, including within Emacs. To get rid of those distractions, and concentrate on your words, check out [[https://github.com/joostkremers/writeroom-mode][Writeroom mode]]. It hides menus and the toolbar, puts Emacs into full screen mode, and hides the scrollbar.
干扰无处不在，包括在Emacs中。为了摆脱这些干扰，专注于你的话语，请查看[[https://github.com/joostkremers/writeroom-mode][Writeroom mode]]。它隐藏菜单和工具栏，使Emacs进入全屏模式，并隐藏滚动条。

Do you have a favorite Emacs mode that you use when writing? Why not share it by leaving a comment?
您在编写时是否有最喜欢的Emacs模式?为什么不留言分享呢?
